/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* perform basic reset, normalize css to make every browser reset */
/* use the universal selector "*" to reset it */
/* also select after and before pseudo-elements, avoids strange behavior */
*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    /* force inherit, will take border-box */
    box-sizing: inherit;
}

/* set root font size is 16px */
/* good to set root font to percentage, */
/* this will use the browser's given font */
html {
    font-size: 62.5%;
}

/* properties related to font are inherited */
/* font should be specified in body */
body {
    font-family: "Lato", sans-serif;
    /* project wide font */
    font-weight: 400;
    /* font-size: 16px; */
    /* 1.7 times bigger than line height you would have without this */
    line-height: 1.7;
    color: #777;
    padding: 3rem;

    /* box sizing: change the box model so borders and box are not added to total height or width*/
    box-sizing: border-box;
}

.header {
    /* at every point, height of element should be 95% viewport height */
    height: 95vh;
    background-image: linear-gradient(to right bottom, 
        rgba(126, 213, 111, .6), 
        rgba(40, 180, 131, .8)), url(../img/hero.jpg);
    background-size: cover;
    /* top of image stays on top of container */
    background-position: center;
    position: relative;
    clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%)
}

.logo-box {
    /* put image where we want */
    position: absolute;
    top: 4rem;
    left: 4rem;

}

.logo {
    height: 3.5rem;
}

/*
.logo:hover {
    animation: moveInRight 1s ease-out;
}
*/

.text-box {
    position: absolute;
    /* in relation to parent element */
    top: 40%;
    left: 50%;
    /* background-color: red; */
    /* in relation to element itself */
    transform: translate(-50%, -50%);
    /* center text inside of box */
    text-align: center;
    /* background-color: green; */
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    
    margin-bottom: 3rem;

    /* quick fix for jump up after animation completes */
    /* does not seem to be an issue with current browser */
    /* background-color: red; */
    /* backface-visibility: hidden; */
}

.heading-primary-main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation: moveInLeft 1s ease-out;

    /* animation-name: moveInLeft; */
    /* animation-duration: 1s; */
    /* animation-timing-function: ease-out; */
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */
}

.heading-primary-sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;
}

/* browsers are optimized for opacity and transform */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    /* 60% {
        transform: rotate(180deg);
    } */

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(10rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* psuedoclass - a special state of selector */
/* want visited state to be same as link */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    font-size: 1.6rem;
    /* by default, it is an inline element */
    display: inline-block;

    /* to center, if it is text, set text-box */
    text-align: center;

    border-radius: 50rem;
    transition: all .2s;

    /* set so we can take advantage of psuedo element after */
    position: relative;
}

.btn:hover {
    transform: translateY(-.3rem);
    /* x y blur */
    box-shadow: 0 .5rem 2rem rgba(0, 0, 0, .2);
}

.btn:active {
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
}

.btn-white {
    background-color: #FFF;
    color: #777;

}

/* want to look same as og button */
.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 30rem;
    /* relative to first position */
    position: absolute;
    top: 0;
    left: 0;
    /* set behind button */
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #FFF;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    /* fade it out trick */
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s;
    /* auto apply styles of 0% before animation starts */
    animation-fill-mode: backwards;
}